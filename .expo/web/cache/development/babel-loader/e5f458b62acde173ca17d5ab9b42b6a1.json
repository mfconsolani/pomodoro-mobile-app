{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"style\", \"textStyle\", \"size\"];\n\nvar _this = this,\n    _jsxFileName = \"/home/mauro/Programacion/ReactNative/pomodoro-mobile-app/src/components/RoundedButton.js\";\n\nimport React from 'react';\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { stylePatterns } from \"../utils/stylesPatterns\";\n\nvar styles = function styles(size) {\n  return StyleSheet.create({\n    radius: {\n      flexGrow: 1,\n      flexShrink: 1,\n      borderRadius: size / 2,\n      width: size,\n      height: size,\n      alignItems: \"center\",\n      borderColor: \"#fff\",\n      borderWidth: 2,\n      justifyContent: \"center\"\n    },\n    text: {\n      color: \"#fff\",\n      fontSize: size / 3\n    }\n  });\n};\n\nexport var RoundedButton = function RoundedButton(_ref) {\n  var _ref$style = _ref.style,\n      style = _ref$style === void 0 ? {} : _ref$style,\n      _ref$textStyle = _ref.textStyle,\n      textStyle = _ref$textStyle === void 0 ? {} : _ref$textStyle,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 125 : _ref$size,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return React.createElement(TouchableOpacity, {\n    style: [styles(size).radius, style],\n    onPress: props.onPress,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: [styles(size).text, textStyle],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, props.title));\n};","map":{"version":3,"sources":["/home/mauro/Programacion/ReactNative/pomodoro-mobile-app/src/components/RoundedButton.js"],"names":["React","stylePatterns","styles","size","StyleSheet","create","radius","flexGrow","flexShrink","borderRadius","width","height","alignItems","borderColor","borderWidth","justifyContent","text","color","fontSize","RoundedButton","style","textStyle","props","onPress","title"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAEA,SAASC,aAAT;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAACC,IAAD;AAAA,SAAUC,UAAU,CAACC,MAAX,CAAkB;AACzCC,IAAAA,MAAM,EAAE;AACNC,MAAAA,QAAQ,EAAE,CADJ;AAENC,MAAAA,UAAU,EAAE,CAFN;AAGNC,MAAAA,YAAY,EAAEN,IAAI,GAAC,CAHb;AAINO,MAAAA,KAAK,EAAEP,IAJD;AAKNQ,MAAAA,MAAM,EAAER,IALF;AAMNS,MAAAA,UAAU,EAAE,QANN;AAONC,MAAAA,WAAW,EAAE,MAPP;AAQNC,MAAAA,WAAW,EAAE,CARP;AASNC,MAAAA,cAAc,EAAE;AATV,KADiC;AAYzCC,IAAAA,IAAI,EAAE;AACJC,MAAAA,KAAK,EAAE,MADH;AAEJC,MAAAA,QAAQ,EAAEf,IAAI,GAAC;AAFX;AAZmC,GAAlB,CAAV;AAAA,CAAf;;AAkBA,OAAO,IAAMgB,aAAa,GAAG,SAAhBA,aAAgB,OAKvB;AAAA,wBAJJC,KAII;AAAA,MAJJA,KAII,2BAJI,EAIJ;AAAA,4BAHJC,SAGI;AAAA,MAHJA,SAGI,+BAHQ,EAGR;AAAA,uBAFJlB,IAEI;AAAA,MAFJA,IAEI,0BAFG,GAEH;AAAA,MADDmB,KACC;;AAEJ,SACE,oBAAC,gBAAD;AAAkB,IAAA,KAAK,EAAE,CAACpB,MAAM,CAACC,IAAD,CAAN,CAAaG,MAAd,EAAsBc,KAAtB,CAAzB;AAAuD,IAAA,OAAO,EAAEE,KAAK,CAACC,OAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE,CAACrB,MAAM,CAACC,IAAD,CAAN,CAAaa,IAAd,EAAoBK,SAApB,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8CC,KAAK,CAACE,KAApD,CADF,CADF;AAKD,CAZM","sourcesContent":["import React from 'react';\nimport { TouchableOpacity, Text, StyleSheet } from 'react-native';\nimport { stylePatterns } from '../utils/stylesPatterns';\n\nconst styles = (size) => StyleSheet.create({\n  radius: {\n    flexGrow: 1,\n    flexShrink: 1,\n    borderRadius: size/2,\n    width: size,\n    height: size,\n    alignItems: \"center\",\n    borderColor: \"#fff\",\n    borderWidth: 2,\n    justifyContent: \"center\",\n  },\n  text: {\n    color: \"#fff\",\n    fontSize: size/3,\n  }\n});\n\nexport const RoundedButton = ({\n  style = {},\n  textStyle = {},\n  size = 125,\n  ...props\n}) => {\n\n  return (\n    <TouchableOpacity style={[styles(size).radius, style]} onPress={props.onPress}>\n      <Text style={[styles(size).text, textStyle]}>{props.title}</Text>\n    </TouchableOpacity>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}