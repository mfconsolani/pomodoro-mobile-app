{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/mauro/Programacion/ReactNative/pomodoro-mobile-app/src/components/Countdown.js\";\n\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { stylePatterns } from \"../utils/stylesPatterns\";\n\nvar minutesToMillis = function minutesToMillis(min) {\n  return min * 1000 * 60;\n};\n\nvar formatTime = function formatTime(time) {\n  return time < 10 ? \"0\" + time : time;\n};\n\nexport var Countdown = function Countdown(_ref) {\n  var _ref$minutes = _ref.minutes,\n      minutes = _ref$minutes === void 0 ? 20 : _ref$minutes,\n      isPaused = _ref.isPaused;\n\n  var _useState = useState(minutesToMillis(minutes)),\n      _useState2 = _slicedToArray(_useState, 2),\n      millis = _useState2[0],\n      setMillis = _useState2[1];\n\n  var minute = Math.floor(millis / 1000 / 60) % 60;\n  var seconds = Math.floor(millis / 1000) % 60;\n  return React.createElement(Text, {\n    style: styles.text,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }, formatTime(minute), \":\", formatTime(seconds));\n};\nvar styles = StyleSheet.create({\n  text: {\n    fontSize: stylePatterns.fontSizes.xl,\n    fontWeight: \"bold\",\n    color: stylePatterns.color.white,\n    padding: stylePatterns.paddingSizes.lg,\n    backgroundColor: 'rgba(94, 132, 226, 0.3)'\n  }\n});","map":{"version":3,"sources":["/home/mauro/Programacion/ReactNative/pomodoro-mobile-app/src/components/Countdown.js"],"names":["React","useState","useEffect","stylePatterns","minutesToMillis","min","formatTime","time","Countdown","minutes","isPaused","millis","setMillis","minute","Math","floor","seconds","styles","text","StyleSheet","create","fontSize","fontSizes","xl","fontWeight","color","white","padding","paddingSizes","lg","backgroundColor"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA0C,OAA1C;;;;AAEA,SAASC,aAAT;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,GAAD;AAAA,SAASA,GAAG,GAAG,IAAN,GAAa,EAAtB;AAAA,CAAxB;;AACA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,IAAD;AAAA,SAAUA,IAAI,GAAG,EAAP,SAAgBA,IAAhB,GAAwBA,IAAlC;AAAA,CAAnB;;AAEA,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY,OAGnB;AAAA,0BAFJC,OAEI;AAAA,MAFJA,OAEI,6BAFM,EAEN;AAAA,MADJC,QACI,QADJA,QACI;;AACJ,kBAA8BT,QAAQ,CAACG,eAAe,CAACK,OAAD,CAAhB,CAAtC;AAAA;AAAA,MAAQE,MAAR;AAAA,MAAgBC,SAAhB;;AAEA,MAAMC,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWJ,MAAM,GAAG,IAAT,GAAgB,EAA3B,IAAiC,EAAhD;AACA,MAAMK,OAAO,GAAGF,IAAI,CAACC,KAAL,CAAWJ,MAAM,GAAG,IAApB,IAA4B,EAA5C;AACA,SAEI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEM,MAAM,CAACC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2BZ,UAAU,CAACO,MAAD,CAArC,OAAgDP,UAAU,CAACU,OAAD,CAA1D,CAFJ;AAKD,CAbM;AAeP,IAAMC,MAAM,GAAGE,UAAU,CAACC,MAAX,CAAkB;AAC9BF,EAAAA,IAAI,EAAE;AACLG,IAAAA,QAAQ,EAAElB,aAAa,CAACmB,SAAd,CAAwBC,EAD7B;AAELC,IAAAA,UAAU,EAAE,MAFP;AAGLC,IAAAA,KAAK,EAAEtB,aAAa,CAACsB,KAAd,CAAoBC,KAHtB;AAILC,IAAAA,OAAO,EAAExB,aAAa,CAACyB,YAAd,CAA2BC,EAJ/B;AAKLC,IAAAA,eAAe,EAAE;AALZ;AADwB,CAAlB,CAAf","sourcesContent":["import React, { useState, useEffect} from 'react';\nimport {View, StyleSheet, Text} from 'react-native';\nimport { stylePatterns } from '../utils/stylesPatterns';\n\nconst minutesToMillis = (min) => min * 1000 * 60;\nconst formatTime = (time) => time < 10 ? `0${time}`: time;\n\nexport const Countdown = ({\n  minutes = 20,\n  isPaused,\n}) => {\n  const [ millis, setMillis ] = useState(minutesToMillis(minutes))\n\n  const minute = Math.floor(millis / 1000 / 60) % 60;\n  const seconds = Math.floor(millis / 1000) % 60;\n  return (\n    // <View style={styles.container}>\n      <Text style={styles.text}>{formatTime(minute)}:{formatTime(seconds)}</Text>\n    // </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n   text: {\n    fontSize: stylePatterns.fontSizes.xl,\n    fontWeight: \"bold\",\n    color: stylePatterns.color.white,\n    padding: stylePatterns.paddingSizes.lg,\n    backgroundColor: 'rgba(94, 132, 226, 0.3)'\n   },\n});"]},"metadata":{},"sourceType":"module"}