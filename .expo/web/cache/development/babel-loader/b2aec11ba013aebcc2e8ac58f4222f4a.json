{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/mauro/Programacion/ReactNative/pomodoro-mobile-app/src/features/timer/Timer.js\";\n\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { ProgressBar } from 'react-native-paper';\nimport { stylePatterns } from \"../../utils/stylesPatterns\";\nimport { Countdown } from \"../../components/Countdown\";\nimport { RoundedButton } from \"../../components/RoundedButton\";\nimport { Timing } from \"../timer/Timing\";\nimport { useEffect } from 'react/cjs/react.development';\nexport var Timer = function Timer(_ref) {\n  var focusSubject = _ref.focusSubject;\n\n  var _useState = useState(0.1),\n      _useState2 = _slicedToArray(_useState, 2),\n      minutes = _useState2[0],\n      setMinutes = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isStarted = _useState4[0],\n      setIsStarted = _useState4[1];\n\n  var _useState5 = useState(1),\n      _useState6 = _slicedToArray(_useState5, 2),\n      progress = _useState6[0],\n      setProgress = _useState6[1];\n\n  var onProgress = function onProgress(progress) {\n    setProgress(progress);\n  };\n\n  var changeTime = function changeTime(min) {\n    setMinutes(min);\n  };\n\n  useEffect(function () {\n    setProgress(minutes);\n  }, [minutes]);\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.countdown,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, React.createElement(Countdown, {\n    minutes: minutes,\n    isPaused: !isStarted,\n    onProgress: onProgress,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    style: {\n      paddingTop: stylePatterns.paddingSizes.xxl\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, \"We are focusing on\"), React.createElement(Text, {\n    style: styles.task,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, focusSubject)), React.createElement(View, {\n    style: styles.progressBarContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, React.createElement(ProgressBar, {\n    style: styles.progressBar,\n    progress: progress,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    style: styles.buttonWrapper,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, React.createElement(Timing, {\n    onChangeTime: changeTime,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    style: styles.buttonWrapper,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, React.createElement(RoundedButton, {\n    title: isStarted ? 'pause' : 'start',\n    onPress: function onPress() {\n      return setIsStarted(!isStarted);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  })));\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  title: {\n    color: stylePatterns.color.white,\n    textAlign: \"center\"\n  },\n  task: {\n    fontWeight: 'bold',\n    textAlign: \"center\",\n    color: stylePatterns.color.white\n  },\n  countdown: {\n    flex: 0.5,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  buttonWrapper: {\n    flex: 0.3,\n    flexDirection: \"row\",\n    padding: stylePatterns.paddingSizes.xxl,\n    justifyContent: \"space-around\",\n    alignItems: \"center\"\n  },\n  progressBar: {\n    height: 10,\n    color: \"#5E84E2\"\n  },\n  progressBarContainer: {\n    paddingTop: stylePatterns.paddingSizes.sm\n  }\n});","map":{"version":3,"sources":["/home/mauro/Programacion/ReactNative/pomodoro-mobile-app/src/features/timer/Timer.js"],"names":["React","useState","ProgressBar","stylePatterns","Countdown","RoundedButton","Timing","useEffect","Timer","focusSubject","minutes","setMinutes","isStarted","setIsStarted","progress","setProgress","onProgress","changeTime","min","styles","container","countdown","paddingTop","paddingSizes","xxl","title","task","progressBarContainer","progressBar","buttonWrapper","StyleSheet","create","flex","color","white","textAlign","fontWeight","alignItems","justifyContent","flexDirection","padding","height","sm"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { View, StyleSheet, Text } from 'react-native';\nimport { ProgressBar } from 'react-native-paper';\nimport { stylePatterns } from '../../utils/stylesPatterns';\nimport { Countdown } from '../../components/Countdown';\nimport { RoundedButton } from '../../components/RoundedButton';\nimport { Timing } from '../timer/Timing';\nimport { useEffect } from 'react/cjs/react.development';\n\nexport const Timer = ({ focusSubject }) => {\n  const [minutes, setMinutes] = useState(0.1);\n  const [isStarted, setIsStarted] = useState(false);\n  const [progress, setProgress] = useState(1);\n\n  const onProgress = progress => {\n    setProgress(progress);\n  };\n  const changeTime = (min) => {\n    setMinutes(min);\n  };\n\n  useEffect(()=> {\n    setProgress(minutes);\n  }, [minutes])\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.countdown}>\n        <Countdown minutes={minutes} isPaused={!isStarted} onProgress={onProgress} />\n      </View>\n      <View style={{ paddingTop: stylePatterns.paddingSizes.xxl }}>\n        <Text style={styles.title}>We are focusing on</Text>\n        <Text style={styles.task}>{focusSubject}</Text>\n      </View>\n      <View style={styles.progressBarContainer}>\n        <ProgressBar style={styles.progressBar} progress={progress} />\n      </View>\n      <View style={styles.buttonWrapper}>\n        <Timing onChangeTime={changeTime}/>\n      </View>\n      <View style={styles.buttonWrapper}>\n        <RoundedButton\n          title={isStarted ? 'pause' : 'start'}\n          onPress={() => setIsStarted(!isStarted)} />\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  title: {\n    color: stylePatterns.color.white,\n    textAlign: \"center\"\n  },\n  task: {\n    fontWeight: 'bold',\n    textAlign: \"center\",\n    color: stylePatterns.color.white\n  },\n  countdown: {\n    flex: 0.5,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  buttonWrapper: {\n    flex: 0.3,\n    flexDirection: \"row\",\n    padding: stylePatterns.paddingSizes.xxl,\n    justifyContent: \"space-around\",\n    alignItems: \"center\"\n  },\n  progressBar: {\n    height: 10,\n    color:\"#5E84E2\"\n  },\n  progressBarContainer: {\n    paddingTop: stylePatterns.paddingSizes.sm,\n  }\n});"]},"metadata":{},"sourceType":"module"}